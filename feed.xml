<?xml version="1.0" encoding="UTF-8"?> <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"> <channel> <title> blank </title> <description>개발을 좋아하는 딥러닝 리서쳐 장원범입니다. </description> <link>https://www.wonbeomjang.kr/</link> <atom:link href="https://www.wonbeomjang.kr/feed.xml" rel="self" type="application/rss+xml"/> <pubDate>Thu, 01 Feb 2024 08:30:23 +0000</pubDate> <lastBuildDate>Thu, 01 Feb 2024 08:30:23 +0000</lastBuildDate> <generator>Jekyll v4.3.3</generator> <item> <title>a post with code diff</title> <description>&lt;p&gt;You can display diff code by using the regular markdown syntax:&lt;/p&gt; &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;```&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;diff &lt;/span&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/sample.js b/sample.js index 0000001..0ddf2ba &lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/sample.js &lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/sample.js &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@@ -1 +1 @@&lt;/span&gt; &lt;span class=&quot;gd&quot;&gt;-console.log(&quot;Hello World!&quot;) &lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+console.log(&quot;Hello from Diff2Html!&quot;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;```&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Which generates:&lt;/p&gt; &lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/sample.js b/sample.js index 0000001..0ddf2ba &lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/sample.js &lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/sample.js &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@@ -1 +1 @@&lt;/span&gt; &lt;span class=&quot;gd&quot;&gt;-console.log(&quot;Hello World!&quot;) &lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+console.log(&quot;Hello from Diff2Html!&quot;) &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;But this is difficult to read, specially if you have a large diff. You can use &lt;a href=&quot;https://diff2html.xyz/&quot;&gt;diff2html&lt;/a&gt; to display a more readable version of the diff. For this, just use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;diff2html&lt;/code&gt; instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;diff&lt;/code&gt; for the code block language:&lt;/p&gt; &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;```&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;diff2html &lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;diff --git a/sample.js b/sample.js index 0000001..0ddf2ba --- a/sample.js +++ b/sample.js @@ -1 +1 @@ -console.log(&quot;Hello World!&quot;) +console.log(&quot;Hello from Diff2Html!&quot;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;```&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;If we use a longer example, for example &lt;a href=&quot;https://github.com/rtfpessoa/diff2html/commit/c2c253d3e3f8b8b267f551e659f72b44ca2ac927&quot;&gt;this commit from diff2html&lt;/a&gt;, it will generate the following output:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-diff2html&quot;&gt;From 2aaae31cc2a37bfff83430c2c914b140bee59b6a Mon Sep 17 00:00:00 2001 From: Rodrigo Fernandes &amp;lt;rtfrodrigo@gmail.com&amp;gt; Date: Sun, 9 Oct 2016 16:41:54 +0100 Subject: [PATCH 1/2] Initial template override support --- scripts/hulk.js | 4 ++-- src/diff2html.js | 3 +-- src/file-list-printer.js | 11 ++++++++--- src/hoganjs-utils.js | 29 +++++++++++++++++------------ src/html-printer.js | 6 ++++++ src/line-by-line-printer.js | 6 +++++- src/side-by-side-printer.js | 6 +++++- test/file-list-printer-tests.js | 2 +- test/hogan-cache-tests.js | 18 +++++++++++++++--- test/line-by-line-tests.js | 3 +-- test/side-by-side-printer-tests.js | 3 +-- 11 files changed, 62 insertions(+), 29 deletions(-) diff --git a/scripts/hulk.js b/scripts/hulk.js index 5a793c18..a4b1a4d5 100755 --- a/scripts/hulk.js +++ b/scripts/hulk.js @@ -173,11 +173,11 @@ function namespace(name) { // write a template foreach file that matches template extension templates = extractFiles(options.argv.remain) .map(function(file) { - var openedFile = fs.readFileSync(file, &apos;utf-8&apos;); + var openedFile = fs.readFileSync(file, &apos;utf-8&apos;).trim(); var name; if (!openedFile) return; name = namespace(path.basename(file).replace(/\..*$/, &apos;&apos;)); - openedFile = removeByteOrderMark(openedFile.trim()); + openedFile = removeByteOrderMark(openedFile); openedFile = wrap(file, name, openedFile); if (!options.outputdir) return openedFile; fs.writeFileSync(path.join(options.outputdir, name + &apos;.js&apos;) diff --git a/src/diff2html.js b/src/diff2html.js index 21b0119e..64e138f5 100644 --- a/src/diff2html.js +++ b/src/diff2html.js @@ -7,7 +7,6 @@ (function() { var diffParser = require(&apos;./diff-parser.js&apos;).DiffParser; - var fileLister = require(&apos;./file-list-printer.js&apos;).FileListPrinter; var htmlPrinter = require(&apos;./html-printer.js&apos;).HtmlPrinter; function Diff2Html() { @@ -43,7 +42,7 @@ var fileList = &apos;&apos;; if (configOrEmpty.showFiles === true) { - fileList = fileLister.generateFileList(diffJson, configOrEmpty); + fileList = htmlPrinter.generateFileListSummary(diffJson, configOrEmpty); } var diffOutput = &apos;&apos;; diff --git a/src/file-list-printer.js b/src/file-list-printer.js index e408d9b2..1e0a2c61 100644 --- a/src/file-list-printer.js +++ b/src/file-list-printer.js @@ -8,11 +8,16 @@ (function() { var printerUtils = require(&apos;./printer-utils.js&apos;).PrinterUtils; - var hoganUtils = require(&apos;./hoganjs-utils.js&apos;).HoganJsUtils; + var hoganUtils; + var baseTemplatesPath = &apos;file-summary&apos;; var iconsBaseTemplatesPath = &apos;icon&apos;; - function FileListPrinter() { + function FileListPrinter(config) { + this.config = config; + + var HoganJsUtils = require(&apos;./hoganjs-utils.js&apos;).HoganJsUtils; + hoganUtils = new HoganJsUtils(config); } FileListPrinter.prototype.generateFileList = function(diffFiles) { @@ -38,5 +43,5 @@ }); }; - module.exports.FileListPrinter = new FileListPrinter(); + module.exports.FileListPrinter = FileListPrinter; })(); diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js index 9949e5fa..0dda08d7 100644 --- a/src/hoganjs-utils.js +++ b/src/hoganjs-utils.js @@ -8,18 +8,19 @@ (function() { var fs = require(&apos;fs&apos;); var path = require(&apos;path&apos;); - var hogan = require(&apos;hogan.js&apos;); var hoganTemplates = require(&apos;./templates/diff2html-templates.js&apos;); - var templatesPath = path.resolve(__dirname, &apos;templates&apos;); + var extraTemplates; - function HoganJsUtils() { + function HoganJsUtils(configuration) { + this.config = configuration || {}; + extraTemplates = this.config.templates || {}; } - HoganJsUtils.prototype.render = function(namespace, view, params, configuration) { - var template = this.template(namespace, view, configuration); + HoganJsUtils.prototype.render = function(namespace, view, params) { + var template = this.template(namespace, view); if (template) { return template.render(params); } @@ -27,17 +28,16 @@ return null; }; - HoganJsUtils.prototype.template = function(namespace, view, configuration) { - var config = configuration || {}; + HoganJsUtils.prototype.template = function(namespace, view) { var templateKey = this._templateKey(namespace, view); - return this._getTemplate(templateKey, config); + return this._getTemplate(templateKey); }; - HoganJsUtils.prototype._getTemplate = function(templateKey, config) { + HoganJsUtils.prototype._getTemplate = function(templateKey) { var template; - if (!config.noCache) { + if (!this.config.noCache) { template = this._readFromCache(templateKey); } @@ -53,6 +53,7 @@ try { if (fs.readFileSync) { + var templatesPath = path.resolve(__dirname, &apos;templates&apos;); var templatePath = path.join(templatesPath, templateKey); var templateContent = fs.readFileSync(templatePath + &apos;.mustache&apos;, &apos;utf8&apos;); template = hogan.compile(templateContent); @@ -66,12 +67,16 @@ }; HoganJsUtils.prototype._readFromCache = function(templateKey) { - return hoganTemplates[templateKey]; + return extraTemplates[templateKey] || hoganTemplates[templateKey]; }; HoganJsUtils.prototype._templateKey = function(namespace, view) { return namespace + &apos;-&apos; + view; }; - module.exports.HoganJsUtils = new HoganJsUtils(); + HoganJsUtils.prototype.compile = function(templateStr) { + return hogan.compile(templateStr); + }; + + module.exports.HoganJsUtils = HoganJsUtils; })(); diff --git a/src/html-printer.js b/src/html-printer.js index 585d5b66..13f83047 100644 --- a/src/html-printer.js +++ b/src/html-printer.js @@ -8,6 +8,7 @@ (function() { var LineByLinePrinter = require(&apos;./line-by-line-printer.js&apos;).LineByLinePrinter; var SideBySidePrinter = require(&apos;./side-by-side-printer.js&apos;).SideBySidePrinter; + var FileListPrinter = require(&apos;./file-list-printer.js&apos;).FileListPrinter; function HtmlPrinter() { } @@ -22,5 +23,10 @@ return sideBySidePrinter.generateSideBySideJsonHtml(diffFiles); }; + HtmlPrinter.prototype.generateFileListSummary = function(diffJson, config) { + var fileListPrinter = new FileListPrinter(config); + return fileListPrinter.generateFileList(diffJson); + }; + module.exports.HtmlPrinter = new HtmlPrinter(); })(); diff --git a/src/line-by-line-printer.js b/src/line-by-line-printer.js index b07eb53c..d230bedd 100644 --- a/src/line-by-line-printer.js +++ b/src/line-by-line-printer.js @@ -11,7 +11,8 @@ var utils = require(&apos;./utils.js&apos;).Utils; var Rematch = require(&apos;./rematch.js&apos;).Rematch; - var hoganUtils = require(&apos;./hoganjs-utils.js&apos;).HoganJsUtils; + var hoganUtils; + var genericTemplatesPath = &apos;generic&apos;; var baseTemplatesPath = &apos;line-by-line&apos;; var iconsBaseTemplatesPath = &apos;icon&apos;; @@ -19,6 +20,9 @@ function LineByLinePrinter(config) { this.config = config; + + var HoganJsUtils = require(&apos;./hoganjs-utils.js&apos;).HoganJsUtils; + hoganUtils = new HoganJsUtils(config); } LineByLinePrinter.prototype.makeFileDiffHtml = function(file, diffs) { diff --git a/src/side-by-side-printer.js b/src/side-by-side-printer.js index bbf1dc8d..5e3033b3 100644 --- a/src/side-by-side-printer.js +++ b/src/side-by-side-printer.js @@ -11,7 +11,8 @@ var utils = require(&apos;./utils.js&apos;).Utils; var Rematch = require(&apos;./rematch.js&apos;).Rematch; - var hoganUtils = require(&apos;./hoganjs-utils.js&apos;).HoganJsUtils; + var hoganUtils; + var genericTemplatesPath = &apos;generic&apos;; var baseTemplatesPath = &apos;side-by-side&apos;; var iconsBaseTemplatesPath = &apos;icon&apos;; @@ -26,6 +27,9 @@ function SideBySidePrinter(config) { this.config = config; + + var HoganJsUtils = require(&apos;./hoganjs-utils.js&apos;).HoganJsUtils; + hoganUtils = new HoganJsUtils(config); } SideBySidePrinter.prototype.makeDiffHtml = function(file, diffs) { diff --git a/test/file-list-printer-tests.js b/test/file-list-printer-tests.js index a502a46f..60ea3208 100644 --- a/test/file-list-printer-tests.js +++ b/test/file-list-printer-tests.js @@ -1,6 +1,6 @@ var assert = require(&apos;assert&apos;); -var fileListPrinter = require(&apos;../src/file-list-printer.js&apos;).FileListPrinter; +var fileListPrinter = new (require(&apos;../src/file-list-printer.js&apos;).FileListPrinter)(); describe(&apos;FileListPrinter&apos;, function() { describe(&apos;generateFileList&apos;, function() { diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js index 190bf6f8..3bb754ac 100644 --- a/test/hogan-cache-tests.js +++ b/test/hogan-cache-tests.js @@ -1,6 +1,6 @@ var assert = require(&apos;assert&apos;); -var HoganJsUtils = require(&apos;../src/hoganjs-utils.js&apos;).HoganJsUtils; +var HoganJsUtils = new (require(&apos;../src/hoganjs-utils.js&apos;).HoganJsUtils)(); var diffParser = require(&apos;../src/diff-parser.js&apos;).DiffParser; describe(&apos;HoganJsUtils&apos;, function() { @@ -21,16 +21,28 @@ describe(&apos;HoganJsUtils&apos;, function() { }); assert.equal(emptyDiffHtml, result); }); + it(&apos;should render view without cache&apos;, function() { var result = HoganJsUtils.render(&apos;generic&apos;, &apos;empty-diff&apos;, { contentClass: &apos;d2h-code-line&apos;, diffParser: diffParser }, {noCache: true}); - assert.equal(emptyDiffHtml + &apos;\n&apos;, result); + assert.equal(emptyDiffHtml, result); }); + it(&apos;should return null if template is missing&apos;, function() { - var result = HoganJsUtils.render(&apos;generic&apos;, &apos;missing-template&apos;, {}, {noCache: true}); + var hoganUtils = new (require(&apos;../src/hoganjs-utils.js&apos;).HoganJsUtils)({noCache: true}); + var result = hoganUtils.render(&apos;generic&apos;, &apos;missing-template&apos;, {}); assert.equal(null, result); }); + + it(&apos;should allow templates to be overridden&apos;, function() { + var emptyDiffTemplate = HoganJsUtils.compile(&apos;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&apos;); + + var config = {templates: {&apos;generic-empty-diff&apos;: emptyDiffTemplate}}; + var hoganUtils = new (require(&apos;../src/hoganjs-utils.js&apos;).HoganJsUtils)(config); + var result = hoganUtils.render(&apos;generic&apos;, &apos;empty-diff&apos;, {myName: &apos;Rodrigo Fernandes&apos;}); + assert.equal(&apos;&amp;lt;p&amp;gt;Rodrigo Fernandes&amp;lt;/p&amp;gt;&apos;, result); + }); }); }); diff --git a/test/line-by-line-tests.js b/test/line-by-line-tests.js index 1cd92073..8869b3df 100644 --- a/test/line-by-line-tests.js +++ b/test/line-by-line-tests.js @@ -14,7 +14,7 @@ describe(&apos;LineByLinePrinter&apos;, function() { &apos; File without changes\n&apos; + &apos; &amp;lt;/div&amp;gt;\n&apos; + &apos; &amp;lt;/td&amp;gt;\n&apos; + - &apos;&amp;lt;/tr&amp;gt;\n&apos;; + &apos;&amp;lt;/tr&amp;gt;&apos;; assert.equal(expected, fileHtml); }); @@ -422,7 +422,6 @@ describe(&apos;LineByLinePrinter&apos;, function() { &apos; &amp;lt;/div&amp;gt;\n&apos; + &apos; &amp;lt;/td&amp;gt;\n&apos; + &apos;&amp;lt;/tr&amp;gt;\n&apos; + - &apos;\n&apos; + &apos; &amp;lt;/tbody&amp;gt;\n&apos; + &apos; &amp;lt;/table&amp;gt;\n&apos; + &apos; &amp;lt;/div&amp;gt;\n&apos; + diff --git a/test/side-by-side-printer-tests.js b/test/side-by-side-printer-tests.js index 76625f8e..771daaa5 100644 --- a/test/side-by-side-printer-tests.js +++ b/test/side-by-side-printer-tests.js @@ -14,7 +14,7 @@ describe(&apos;SideBySidePrinter&apos;, function() { &apos; File without changes\n&apos; + &apos; &amp;lt;/div&amp;gt;\n&apos; + &apos; &amp;lt;/td&amp;gt;\n&apos; + - &apos;&amp;lt;/tr&amp;gt;\n&apos;; + &apos;&amp;lt;/tr&amp;gt;&apos;; assert.equal(expectedRight, fileHtml.right); assert.equal(expectedLeft, fileHtml.left); @@ -324,7 +324,6 @@ describe(&apos;SideBySidePrinter&apos;, function() { &apos; &amp;lt;/div&amp;gt;\n&apos; + &apos; &amp;lt;/td&amp;gt;\n&apos; + &apos;&amp;lt;/tr&amp;gt;\n&apos; + - &apos;\n&apos; + &apos; &amp;lt;/tbody&amp;gt;\n&apos; + &apos; &amp;lt;/table&amp;gt;\n&apos; + &apos; &amp;lt;/div&amp;gt;\n&apos; + From f3cadb96677d0eb82fc2752dc3ffbf35ca9b5bdb Mon Sep 17 00:00:00 2001 From: Rodrigo Fernandes &amp;lt;rtfrodrigo@gmail.com&amp;gt; Date: Sat, 15 Oct 2016 13:21:22 +0100 Subject: [PATCH 2/2] Allow uncompiled templates --- README.md | 3 +++ src/hoganjs-utils.js | 7 +++++++ test/hogan-cache-tests.js | 24 +++++++++++++++++++++++- 3 files changed, 33 insertions(+), 1 deletion(-) diff --git a/README.md b/README.md index 132c8a28..46909f25 100644 --- a/README.md +++ b/README.md @@ -98,6 +98,9 @@ The HTML output accepts a Javascript object with configuration. Possible options - `synchronisedScroll`: scroll both panes in side-by-side mode: `true` or `false`, default is `false` - `matchWordsThreshold`: similarity threshold for word matching, default is 0.25 - `matchingMaxComparisons`: perform at most this much comparisons for line matching a block of changes, default is `2500` + - `templates`: object with previously compiled templates to replace parts of the html + - `rawTemplates`: object with raw not compiled templates to replace parts of the html + &amp;gt; For more information regarding the possible templates look into [src/templates](https://github.com/rtfpessoa/diff2html/tree/master/src/templates) ## Diff2HtmlUI Helper diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js index 0dda08d7..b2e9c275 100644 --- a/src/hoganjs-utils.js +++ b/src/hoganjs-utils.js @@ -17,6 +17,13 @@ function HoganJsUtils(configuration) { this.config = configuration || {}; extraTemplates = this.config.templates || {}; + + var rawTemplates = this.config.rawTemplates || {}; + for (var templateName in rawTemplates) { + if (rawTemplates.hasOwnProperty(templateName)) { + if (!extraTemplates[templateName]) extraTemplates[templateName] = this.compile(rawTemplates[templateName]); + } + } } HoganJsUtils.prototype.render = function(namespace, view, params) { diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js index 3bb754ac..a34839c0 100644 --- a/test/hogan-cache-tests.js +++ b/test/hogan-cache-tests.js @@ -36,7 +36,7 @@ describe(&apos;HoganJsUtils&apos;, function() { assert.equal(null, result); }); - it(&apos;should allow templates to be overridden&apos;, function() { + it(&apos;should allow templates to be overridden with compiled templates&apos;, function() { var emptyDiffTemplate = HoganJsUtils.compile(&apos;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&apos;); var config = {templates: {&apos;generic-empty-diff&apos;: emptyDiffTemplate}}; @@ -44,5 +44,27 @@ describe(&apos;HoganJsUtils&apos;, function() { var result = hoganUtils.render(&apos;generic&apos;, &apos;empty-diff&apos;, {myName: &apos;Rodrigo Fernandes&apos;}); assert.equal(&apos;&amp;lt;p&amp;gt;Rodrigo Fernandes&amp;lt;/p&amp;gt;&apos;, result); }); + + it(&apos;should allow templates to be overridden with uncompiled templates&apos;, function() { + var emptyDiffTemplate = &apos;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&apos;; + + var config = {rawTemplates: {&apos;generic-empty-diff&apos;: emptyDiffTemplate}}; + var hoganUtils = new (require(&apos;../src/hoganjs-utils.js&apos;).HoganJsUtils)(config); + var result = hoganUtils.render(&apos;generic&apos;, &apos;empty-diff&apos;, {myName: &apos;Rodrigo Fernandes&apos;}); + assert.equal(&apos;&amp;lt;p&amp;gt;Rodrigo Fernandes&amp;lt;/p&amp;gt;&apos;, result); + }); + + it(&apos;should allow templates to be overridden giving priority to compiled templates&apos;, function() { + var emptyDiffTemplate = HoganJsUtils.compile(&apos;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&apos;); + var emptyDiffTemplateUncompiled = &apos;&amp;lt;p&amp;gt;Not used!&amp;lt;/p&amp;gt;&apos;; + + var config = { + templates: {&apos;generic-empty-diff&apos;: emptyDiffTemplate}, + rawTemplates: {&apos;generic-empty-diff&apos;: emptyDiffTemplateUncompiled} + }; + var hoganUtils = new (require(&apos;../src/hoganjs-utils.js&apos;).HoganJsUtils)(config); + var result = hoganUtils.render(&apos;generic&apos;, &apos;empty-diff&apos;, {myName: &apos;Rodrigo Fernandes&apos;}); + assert.equal(&apos;&amp;lt;p&amp;gt;Rodrigo Fernandes&amp;lt;/p&amp;gt;&apos;, result); + }); }); }); &lt;/code&gt;&lt;/pre&gt; </description> <pubDate>Sat, 27 Jan 2024 19:22:00 +0000</pubDate> <link>https://www.wonbeomjang.kr/blog/2024/code-diff/</link> <guid isPermaLink="true">https://www.wonbeomjang.kr/blog/2024/code-diff/</guid> <category>formatting</category> <category>code</category> <category>sample-posts</category> </item> <item> <title>a post with advanced image components</title> <description>&lt;p&gt;This is an example post with advanced image components.&lt;/p&gt; &lt;h2 id=&quot;image-slider&quot;&gt;Image Slider&lt;/h2&gt; &lt;p&gt;This is a simple image slider. It uses the &lt;a href=&quot;https://swiperjs.com/&quot;&gt;Swiper&lt;/a&gt; library. Check the &lt;a href=&quot;https://swiperjs.com/demos&quot;&gt;examples page&lt;/a&gt; for more information of what you can achieve with it.&lt;/p&gt; &lt;swiper-container keyboard=&quot;true&quot; navigation=&quot;true&quot; pagination=&quot;true&quot; pagination-clickable=&quot;true&quot; pagination-dynamic-bullets=&quot;true&quot; rewind=&quot;true&quot;&gt; &lt;swiper-slide&gt; &lt;figure&gt; &lt;picture&gt; &lt;!-- Auto scaling with imagemagick --&gt; &lt;!-- See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining &apos;sizes&apos; for responsive images --&gt; &lt;source class=&quot;responsive-img-srcset&quot; srcset=&quot;/assets/img/9-480.webp 480w,/assets/img/9-800.webp 800w,/assets/img/9-1400.webp 1400w,&quot; sizes=&quot;95vw&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/img/9.jpg&quot; class=&quot;img-fluid rounded z-depth-1&quot; width=&quot;100%&quot; height=&quot;auto&quot; onerror=&quot;this.onerror=null; $(&apos;.responsive-img-srcset&apos;).remove();&quot; /&gt; &lt;/picture&gt; &lt;/figure&gt; &lt;/swiper-slide&gt; &lt;swiper-slide&gt; &lt;figure&gt; &lt;picture&gt; &lt;!-- Auto scaling with imagemagick --&gt; &lt;!-- See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining &apos;sizes&apos; for responsive images --&gt; &lt;source class=&quot;responsive-img-srcset&quot; srcset=&quot;/assets/img/7-480.webp 480w,/assets/img/7-800.webp 800w,/assets/img/7-1400.webp 1400w,&quot; sizes=&quot;95vw&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/img/7.jpg&quot; class=&quot;img-fluid rounded z-depth-1&quot; width=&quot;100%&quot; height=&quot;auto&quot; onerror=&quot;this.onerror=null; $(&apos;.responsive-img-srcset&apos;).remove();&quot; /&gt; &lt;/picture&gt; &lt;/figure&gt; &lt;/swiper-slide&gt; &lt;swiper-slide&gt; &lt;figure&gt; &lt;picture&gt; &lt;!-- Auto scaling with imagemagick --&gt; &lt;!-- See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining &apos;sizes&apos; for responsive images --&gt; &lt;source class=&quot;responsive-img-srcset&quot; srcset=&quot;/assets/img/8-480.webp 480w,/assets/img/8-800.webp 800w,/assets/img/8-1400.webp 1400w,&quot; sizes=&quot;95vw&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/img/8.jpg&quot; class=&quot;img-fluid rounded z-depth-1&quot; width=&quot;100%&quot; height=&quot;auto&quot; onerror=&quot;this.onerror=null; $(&apos;.responsive-img-srcset&apos;).remove();&quot; /&gt; &lt;/picture&gt; &lt;/figure&gt; &lt;/swiper-slide&gt; &lt;swiper-slide&gt; &lt;figure&gt; &lt;picture&gt; &lt;!-- Auto scaling with imagemagick --&gt; &lt;!-- See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining &apos;sizes&apos; for responsive images --&gt; &lt;source class=&quot;responsive-img-srcset&quot; srcset=&quot;/assets/img/10-480.webp 480w,/assets/img/10-800.webp 800w,/assets/img/10-1400.webp 1400w,&quot; sizes=&quot;95vw&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/img/10.jpg&quot; class=&quot;img-fluid rounded z-depth-1&quot; width=&quot;100%&quot; height=&quot;auto&quot; onerror=&quot;this.onerror=null; $(&apos;.responsive-img-srcset&apos;).remove();&quot; /&gt; &lt;/picture&gt; &lt;/figure&gt; &lt;/swiper-slide&gt; &lt;swiper-slide&gt; &lt;figure&gt; &lt;picture&gt; &lt;!-- Auto scaling with imagemagick --&gt; &lt;!-- See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining &apos;sizes&apos; for responsive images --&gt; &lt;source class=&quot;responsive-img-srcset&quot; srcset=&quot;/assets/img/12-480.webp 480w,/assets/img/12-800.webp 800w,/assets/img/12-1400.webp 1400w,&quot; sizes=&quot;95vw&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/img/12.jpg&quot; class=&quot;img-fluid rounded z-depth-1&quot; width=&quot;100%&quot; height=&quot;auto&quot; onerror=&quot;this.onerror=null; $(&apos;.responsive-img-srcset&apos;).remove();&quot; /&gt; &lt;/picture&gt; &lt;/figure&gt; &lt;/swiper-slide&gt; &lt;/swiper-container&gt; &lt;h2 id=&quot;image-comparison-slider&quot;&gt;Image Comparison Slider&lt;/h2&gt; &lt;p&gt;This is a simple image comparison slider. It uses the &lt;a href=&quot;https://img-comparison-slider.sneas.io/&quot;&gt;img-comparison-slider&lt;/a&gt; library. Check the &lt;a href=&quot;https://img-comparison-slider.sneas.io/examples.html&quot;&gt;examples page&lt;/a&gt; for more information of what you can achieve with it.&lt;/p&gt; &lt;img-comparison-slider&gt; &lt;figure slot=&quot;first&quot;&gt; &lt;picture&gt; &lt;!-- Auto scaling with imagemagick --&gt; &lt;!-- See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining &apos;sizes&apos; for responsive images --&gt; &lt;source class=&quot;responsive-img-srcset&quot; srcset=&quot;/assets/img/prof_pic-480.webp 480w,/assets/img/prof_pic-800.webp 800w,/assets/img/prof_pic-1400.webp 1400w,&quot; sizes=&quot;95vw&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/img/prof_pic.jpg&quot; class=&quot;img-fluid rounded z-depth-1&quot; width=&quot;100%&quot; height=&quot;auto&quot; onerror=&quot;this.onerror=null; $(&apos;.responsive-img-srcset&apos;).remove();&quot; /&gt; &lt;/picture&gt; &lt;/figure&gt; &lt;figure slot=&quot;second&quot;&gt; &lt;picture&gt; &lt;!-- Auto scaling with imagemagick --&gt; &lt;!-- See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining &apos;sizes&apos; for responsive images --&gt; &lt;source class=&quot;responsive-img-srcset&quot; srcset=&quot;/assets/img/prof_pic_color-480.webp 480w,/assets/img/prof_pic_color-800.webp 800w,/assets/img/prof_pic_color-1400.webp 1400w,&quot; sizes=&quot;95vw&quot; type=&quot;image/webp&quot; /&gt; &lt;img src=&quot;/assets/img/prof_pic_color.png&quot; class=&quot;img-fluid rounded z-depth-1&quot; width=&quot;100%&quot; height=&quot;auto&quot; onerror=&quot;this.onerror=null; $(&apos;.responsive-img-srcset&apos;).remove();&quot; /&gt; &lt;/picture&gt; &lt;/figure&gt; &lt;/img-comparison-slider&gt; </description> <pubDate>Sat, 27 Jan 2024 11:46:00 +0000</pubDate> <link>https://www.wonbeomjang.kr/blog/2024/advanced-images/</link> <guid isPermaLink="true">https://www.wonbeomjang.kr/blog/2024/advanced-images/</guid> <category>formatting</category> <category>images</category> <category>sample-posts</category> </item> <item> <title>a post with vega lite</title> <description>&lt;p&gt;This is an example post with some &lt;a href=&quot;https://vega.github.io/vega-lite/&quot;&gt;vega lite&lt;/a&gt; code.&lt;/p&gt; &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;```&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;vega_lite &lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;{ &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega-lite/v5.json&quot;, &quot;description&quot;: &quot;A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.&quot;, &quot;data&quot;: { &quot;url&quot;: &quot;https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json&quot; }, &quot;transform&quot;: [ {&quot;filter&quot;: &quot;datum[&apos;IMDB Rating&apos;] != null&quot;}, {&quot;filter&quot;: {&quot;timeUnit&quot;: &quot;year&quot;, &quot;field&quot;: &quot;Release Date&quot;, &quot;range&quot;: [null, 2019]}}, { &quot;joinaggregate&quot;: [{ &quot;op&quot;: &quot;mean&quot;, &quot;field&quot;: &quot;IMDB Rating&quot;, &quot;as&quot;: &quot;AverageRating&quot; }] }, { &quot;calculate&quot;: &quot;datum[&apos;IMDB Rating&apos;] - datum.AverageRating&quot;, &quot;as&quot;: &quot;RatingDelta&quot; } ], &quot;mark&quot;: &quot;point&quot;, &quot;encoding&quot;: { &quot;x&quot;: { &quot;field&quot;: &quot;Release Date&quot;, &quot;type&quot;: &quot;temporal&quot; }, &quot;y&quot;: { &quot;field&quot;: &quot;RatingDelta&quot;, &quot;type&quot;: &quot;quantitative&quot;, &quot;title&quot;: &quot;Rating Delta&quot; }, &quot;color&quot;: { &quot;field&quot;: &quot;RatingDelta&quot;, &quot;type&quot;: &quot;quantitative&quot;, &quot;scale&quot;: {&quot;domainMid&quot;: 0}, &quot;title&quot;: &quot;Rating Delta&quot; } } }&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;```&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Which generates:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-vega_lite&quot;&gt;{ &quot;$schema&quot;: &quot;https://vega.github.io/schema/vega-lite/v5.json&quot;, &quot;description&quot;: &quot;A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.&quot;, &quot;data&quot;: { &quot;url&quot;: &quot;https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json&quot; }, &quot;transform&quot;: [ {&quot;filter&quot;: &quot;datum[&apos;IMDB Rating&apos;] != null&quot;}, {&quot;filter&quot;: {&quot;timeUnit&quot;: &quot;year&quot;, &quot;field&quot;: &quot;Release Date&quot;, &quot;range&quot;: [null, 2019]}}, { &quot;joinaggregate&quot;: [{ &quot;op&quot;: &quot;mean&quot;, &quot;field&quot;: &quot;IMDB Rating&quot;, &quot;as&quot;: &quot;AverageRating&quot; }] }, { &quot;calculate&quot;: &quot;datum[&apos;IMDB Rating&apos;] - datum.AverageRating&quot;, &quot;as&quot;: &quot;RatingDelta&quot; } ], &quot;mark&quot;: &quot;point&quot;, &quot;encoding&quot;: { &quot;x&quot;: { &quot;field&quot;: &quot;Release Date&quot;, &quot;type&quot;: &quot;temporal&quot; }, &quot;y&quot;: { &quot;field&quot;: &quot;RatingDelta&quot;, &quot;type&quot;: &quot;quantitative&quot;, &quot;title&quot;: &quot;Rating Delta&quot; }, &quot;color&quot;: { &quot;field&quot;: &quot;RatingDelta&quot;, &quot;type&quot;: &quot;quantitative&quot;, &quot;scale&quot;: {&quot;domainMid&quot;: 0}, &quot;title&quot;: &quot;Rating Delta&quot; } } } &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This plot supports both light and dark themes.&lt;/p&gt; </description> <pubDate>Sat, 27 Jan 2024 00:20:00 +0000</pubDate> <link>https://www.wonbeomjang.kr/blog/2024/vega-lite/</link> <guid isPermaLink="true">https://www.wonbeomjang.kr/blog/2024/vega-lite/</guid> <category>formatting</category> <category>charts</category> <category>sample-posts</category> </item> <item> <title>a post with geojson</title> <description>&lt;p&gt;This is an example post with some &lt;a href=&quot;https://geojson.org/&quot;&gt;geojson&lt;/a&gt; code. The support is provided thanks to &lt;a href=&quot;https://leafletjs.com/&quot;&gt;Leaflet&lt;/a&gt;. To create your own visualization, go to &lt;a href=&quot;https://geojson.io/&quot;&gt;geojson.io&lt;/a&gt;.&lt;/p&gt; &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;```&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;geojson &lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;{ &quot;type&quot;: &quot;FeatureCollection&quot;, &quot;features&quot;: [ { &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: {}, &quot;geometry&quot;: { &quot;coordinates&quot;: [ [ [ -60.11363029935569, -2.904625022183211 ], [ -60.11363029935569, -3.162613728707967 ], [ -59.820894493858034, -3.162613728707967 ], [ -59.820894493858034, -2.904625022183211 ], [ -60.11363029935569, -2.904625022183211 ] ] ], &quot;type&quot;: &quot;Polygon&quot; } } ] }&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;```&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Which generates:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-geojson&quot;&gt;{ &quot;type&quot;: &quot;FeatureCollection&quot;, &quot;features&quot;: [ { &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: {}, &quot;geometry&quot;: { &quot;coordinates&quot;: [ [ [ -60.11363029935569, -2.904625022183211 ], [ -60.11363029935569, -3.162613728707967 ], [ -59.820894493858034, -3.162613728707967 ], [ -59.820894493858034, -2.904625022183211 ], [ -60.11363029935569, -2.904625022183211 ] ] ], &quot;type&quot;: &quot;Polygon&quot; } } ] } &lt;/code&gt;&lt;/pre&gt; </description> <pubDate>Fri, 26 Jan 2024 17:57:00 +0000</pubDate> <link>https://www.wonbeomjang.kr/blog/2024/geojson-map/</link> <guid isPermaLink="true">https://www.wonbeomjang.kr/blog/2024/geojson-map/</guid> <category>formatting</category> <category>charts</category> <category>maps</category> <category>sample-posts</category> </item> <item> <title>a post with echarts</title> <description>&lt;p&gt;This is an example post with some &lt;a href=&quot;https://echarts.apache.org/&quot;&gt;echarts&lt;/a&gt; code.&lt;/p&gt; &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;```&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;echarts &lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;{ &quot;title&quot;: { &quot;text&quot;: &quot;ECharts Getting Started Example&quot; }, &quot;responsive&quot;: true, &quot;tooltip&quot;: {}, &quot;legend&quot;: { &quot;top&quot;: &quot;30px&quot;, &quot;data&quot;: [&quot;sales&quot;] }, &quot;xAxis&quot;: { &quot;data&quot;: [&quot;Shirts&quot;, &quot;Cardigans&quot;, &quot;Chiffons&quot;, &quot;Pants&quot;, &quot;Heels&quot;, &quot;Socks&quot;] }, &quot;yAxis&quot;: {}, &quot;series&quot;: [ { &quot;name&quot;: &quot;sales&quot;, &quot;type&quot;: &quot;bar&quot;, &quot;data&quot;: [5, 20, 36, 10, 10, 20] } ] }&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;```&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Which generates:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-echarts&quot;&gt;{ &quot;title&quot;: { &quot;text&quot;: &quot;ECharts Getting Started Example&quot; }, &quot;responsive&quot;: true, &quot;tooltip&quot;: {}, &quot;legend&quot;: { &quot;top&quot;: &quot;30px&quot;, &quot;data&quot;: [&quot;sales&quot;] }, &quot;xAxis&quot;: { &quot;data&quot;: [&quot;Shirts&quot;, &quot;Cardigans&quot;, &quot;Chiffons&quot;, &quot;Pants&quot;, &quot;Heels&quot;, &quot;Socks&quot;] }, &quot;yAxis&quot;: {}, &quot;series&quot;: [ { &quot;name&quot;: &quot;sales&quot;, &quot;type&quot;: &quot;bar&quot;, &quot;data&quot;: [5, 20, 36, 10, 10, 20] } ] } &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note that this library offer support for both light and dark themes. You can switch between them using the theme switcher in the top right corner of the page.&lt;/p&gt; </description> <pubDate>Fri, 26 Jan 2024 16:03:00 +0000</pubDate> <link>https://www.wonbeomjang.kr/blog/2024/echarts/</link> <guid isPermaLink="true">https://www.wonbeomjang.kr/blog/2024/echarts/</guid> <category>formatting</category> <category>charts</category> <category>sample-posts</category> </item> <item> <title>a post with chart.js</title> <description>&lt;p&gt;This is an example post with some &lt;a href=&quot;https://www.chartjs.org/&quot;&gt;chart.js&lt;/a&gt; code.&lt;/p&gt; &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;```&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;chartjs &lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;{ &quot;type&quot;: &quot;line&quot;, &quot;data&quot;: { &quot;labels&quot;: [ &quot;January&quot;, &quot;February&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot; ], &quot;datasets&quot;: [ { &quot;label&quot;: &quot;# of bugs&quot;, &quot;fill&quot;: false, &quot;lineTension&quot;: 0.1, &quot;backgroundColor&quot;: &quot;rgba(75,192,192,0.4)&quot;, &quot;borderColor&quot;: &quot;rgba(75,192,192,1)&quot;, &quot;borderCapStyle&quot;: &quot;butt&quot;, &quot;borderDash&quot;: [], &quot;borderDashOffset&quot;: 0, &quot;borderJoinStyle&quot;: &quot;miter&quot;, &quot;pointBorderColor&quot;: &quot;rgba(75,192,192,1)&quot;, &quot;pointBackgroundColor&quot;: &quot;#fff&quot;, &quot;pointBorderWidth&quot;: 1, &quot;pointHoverRadius&quot;: 5, &quot;pointHoverBackgroundColor&quot;: &quot;rgba(75,192,192,1)&quot;, &quot;pointHoverBorderColor&quot;: &quot;rgba(220,220,220,1)&quot;, &quot;pointHoverBorderWidth&quot;: 2, &quot;pointRadius&quot;: 1, &quot;pointHitRadius&quot;: 10, &quot;data&quot;: [ 65, 59, 80, 81, 56, 55, 40 ], &quot;spanGaps&quot;: false } ] }, &quot;options&quot;: {} }&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;```&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;This is how it looks like:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-chartjs&quot;&gt;{ &quot;type&quot;: &quot;line&quot;, &quot;data&quot;: { &quot;labels&quot;: [ &quot;January&quot;, &quot;February&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot; ], &quot;datasets&quot;: [ { &quot;label&quot;: &quot;# of bugs&quot;, &quot;fill&quot;: false, &quot;lineTension&quot;: 0.1, &quot;backgroundColor&quot;: &quot;rgba(75,192,192,0.4)&quot;, &quot;borderColor&quot;: &quot;rgba(75,192,192,1)&quot;, &quot;borderCapStyle&quot;: &quot;butt&quot;, &quot;borderDash&quot;: [], &quot;borderDashOffset&quot;: 0, &quot;borderJoinStyle&quot;: &quot;miter&quot;, &quot;pointBorderColor&quot;: &quot;rgba(75,192,192,1)&quot;, &quot;pointBackgroundColor&quot;: &quot;#fff&quot;, &quot;pointBorderWidth&quot;: 1, &quot;pointHoverRadius&quot;: 5, &quot;pointHoverBackgroundColor&quot;: &quot;rgba(75,192,192,1)&quot;, &quot;pointHoverBorderColor&quot;: &quot;rgba(220,220,220,1)&quot;, &quot;pointHoverBorderWidth&quot;: 2, &quot;pointRadius&quot;: 1, &quot;pointHitRadius&quot;: 10, &quot;data&quot;: [ 65, 59, 80, 81, 56, 55, 40 ], &quot;spanGaps&quot;: false } ] }, &quot;options&quot;: {} } &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Also another example chart.&lt;/p&gt; &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;```&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;chartjs &lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;{ &quot;type&quot;: &quot;doughnut&quot;, &quot;data&quot;: { &quot;labels&quot;: [ &quot;Red&quot;, &quot;Blue&quot;, &quot;Yellow&quot; ], &quot;datasets&quot;: [ { &quot;data&quot;: [ 300, 50, 100 ], &quot;backgroundColor&quot;: [ &quot;#FF6384&quot;, &quot;#36A2EB&quot;, &quot;#FFCE56&quot; ], &quot;hoverBackgroundColor&quot;: [ &quot;#FF6384&quot;, &quot;#36A2EB&quot;, &quot;#FFCE56&quot; ] } ] }, &quot;options&quot;: {} }&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;```&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Which generates:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-chartjs&quot;&gt;{ &quot;type&quot;: &quot;doughnut&quot;, &quot;data&quot;: { &quot;labels&quot;: [ &quot;Red&quot;, &quot;Blue&quot;, &quot;Yellow&quot; ], &quot;datasets&quot;: [ { &quot;data&quot;: [ 300, 50, 100 ], &quot;backgroundColor&quot;: [ &quot;#FF6384&quot;, &quot;#36A2EB&quot;, &quot;#FFCE56&quot; ], &quot;hoverBackgroundColor&quot;: [ &quot;#FF6384&quot;, &quot;#36A2EB&quot;, &quot;#FFCE56&quot; ] } ] }, &quot;options&quot;: {} } &lt;/code&gt;&lt;/pre&gt; </description> <pubDate>Fri, 26 Jan 2024 01:04:00 +0000</pubDate> <link>https://www.wonbeomjang.kr/blog/2024/chartjs/</link> <guid isPermaLink="true">https://www.wonbeomjang.kr/blog/2024/chartjs/</guid> <category>formatting</category> <category>charts</category> <category>sample-posts</category> </item> <item> <title>2023년 회고록</title> <description>&lt;h1 id=&quot;전체적인-평가&quot;&gt;전체적인 평가&lt;/h1&gt; &lt;p&gt;2023년을 한 마디로 정리하자면 ‘노력의 결실을 맺은 해’이다.&lt;/p&gt; &lt;p&gt;대학교 입학했을 때 부터 지금까지 딥러닝/컴퓨터비전을 좋아해서 열심히 공부, 프로젝트를 했다. 이를 기반으로 CV와 포트폴리오를 작성했다. 이후에는 ‘뉴로클’에서 리서치 인턴을 진행하면서 제품 개발 및 고도화를 진행했고 성과도 내었다. 앞선 경험을 기반으로 SK텔레콤 공채에 지원하여 합격하게 되었다.&lt;/p&gt; &lt;p&gt;4년동안 열심히 준비하고 노력한 결과이기도 하지만 좋은 기회가 주어져서 감사하게도 성공으로 한 해가 채워졌다. 1년동안 무슨일이 있었는지 확인해보자.&lt;/p&gt; &lt;h1 id=&quot;뉴로클에서의-리서치인턴-116825&quot;&gt;뉴로클에서의 리서치인턴 (1/16~8/25)&lt;/h1&gt; &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/assets/post/image/2023-review/2F49877F-F3D5-427E-91EA-A482AC3E65EA_1_105_c.jpeg&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt; &lt;p&gt;1월부터 뉴로클이라는 스타트업에서 리서치 인턴을 진행했다. 산업계로 갈 것인지 학계로 갈 것인지 고민을 했고 이를 알아보기 위해 스타트업에서 인턴을 했다.&lt;/p&gt; &lt;p&gt;8개월 동안 정말 다양한 논문들을 읽고 공부했으며 실험도 했다. 적어도 1주에 1~2개의 논문을 읽었으니 단순 계산으로도 30개 이상의 논문이다. 그만큼 많은 성장을 했고, 뜻깊은 시간이었다. OCR 고도화 연구뿐만 아니라 Smart labeling (Detection/Segmentation) 기술 검증 및 모델 변환, Transfer Learning 성능검증, Super Resolution 기술 검토, Anomaly Detection 경량화 등 여러 직무를 수행했다.&lt;/p&gt; &lt;p&gt;이렇게 하다 보니 느낀 것이 나는 새로운 모델을 개발하고 성능을 높이는 것보다는 기존에 있는 모델을 memory, inference time, energy consumption 줄여가며 서빙하고 개인화하는 것에 관심이 많다는 것을 깨달았다. 그래서 low-precision, PEFT, hardware optimization, neuromorphic engineering 등에 관심을 두게 되었고 산업계로 가야겠다는 확신이 들었다.&lt;/p&gt; &lt;p&gt;자세한 이야기는 &lt;a href=&quot;https://www.wonbeomjang.kr/blog/2023/startup-research-intern-review/&quot;&gt;스타트업 리서치 인턴 후기&lt;/a&gt;에서 볼 수 있다.&lt;/p&gt; &lt;h1 id=&quot;발리-서핑캠프-82692&quot;&gt;발리 서핑캠프 (8/26~9/2)&lt;/h1&gt; &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/assets/post/image/2023-review/Pasted image 20240103224106.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt; &lt;p&gt;취미다운 취미를 찾고자 발리에 서핑 캠프를 다녀왔다. 1주 동안 내 나쁜 습관을 고치기에는 짧은 시간이었지만 그래도 재밌게 탔다. 시간만 허락한다면 발리에서 몇 달 살면서 서핑만 하고 싶다.&lt;/p&gt; &lt;h1 id=&quot;복학-및-취준-941221&quot;&gt;복학 및 취준 (9/4~12/21)&lt;/h1&gt; &lt;p&gt;휴학을 하고 놀까 아니면 빨리 졸업을 할까 고민을 하다가 빨리 취준을 시작하지 않으면 채용문이 더 닫힐 것 같다는 생각이 들어서 복학하기로 했다. 그래도 11학점만 들으면 되서 여행과 취미활동을 하면서 여유롭게 다녔고, 취준도 시작했다. 이전부터 ‘나의 무엇을 기업에게 팔면 기업은 나를 채용할끼?’라는 생각을 갖고 있었고, 나의 강점을 어필하려고 많은 노력을 한 것 같다. 다음은 내가 에브리타임에 썼던 취업 후기이다.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;사실 1학년 때부터 퍼스널브랜딩과 커리어를 쌓는 것에 관심이 많아서 미리 준비를 많이 한 것 같아요. 취준하면서 느낀 것이 단순히 스펙이 얼마나 좋고, 어학이 얼마나 좋냐 그런것이 중요한게 아닙니다. ‘나’가 누구인지, 다른 지원자와 비교했을 때 어떠한 강점을 가지고있는지, 이를 생각하고 지금까지 어떠한 커리어를 쌓았는지가 중요한 것 같아요. 퍼스널 브랜딩이랄까…. 그래서 저는 다음을 3가지를 강조했습니다.&lt;/p&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;ul&gt; &lt;li&gt;사용자에대한 이해: 디자이너, 기획자 등과 함께 여러 사용자를 대상으로 서비스를 기획하고 개발하고 수상 경험 있음&lt;/li&gt; &lt;li&gt;실용적인 인공지능 개발자: 그저 인공지능모델 성능 높이기에 집중한 것이 하닌 inference time을 유지하거나 줄이면서 성능을 높이는 것에 관심이 많음. 그래서 경량화 하드웨어 최적화를 매 프로젝트에 적용하려함.&lt;/li&gt; &lt;li&gt;연구능력: 딥러닝 스타트업에서 리서치 인턴을 하면서 제품의 성능을 높히고 학습시간을 줄임.&lt;/li&gt; &lt;/ul&gt; &lt;/blockquote&gt; &lt;blockquote&gt; &lt;p&gt;석사랑 비교했을 때 연구능력을 주되게 어필하기에는 어려울 것 같아서, 실용적인 연구, 사용자를 위한 연구개발로 밀고갔네요. 이런걸 정리하니까 제 컨셉이 명확해졌고, 기업의 호불호 때문에 job description이 안 맞으면 바로 서탈이었지만 서류랑 코테 붙으면 큰 걱정없이 최종까지 간 것 같아요.&lt;/p&gt; &lt;/blockquote&gt; &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/assets/post/image/2023-review/5230885D-4877-43F1-BE47-B9B51AAD363A_1_105_c.jpeg&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt; &lt;p&gt;결과론적으로 6개 회사에 지원해서 4개는 서류탈락, 2개가 최종면접까지 갔고, SK텔레콤에 합격하게 되었다. 마음에 드는 기업에 갔으니 나름 성공한 인생 아닐까 싶다.&lt;/p&gt; &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/assets/post/image/2023-review/Pasted image 20240102221917.png&quot; width=&quot;40%&quot; /&gt;&lt;/p&gt; &lt;p&gt;그리고 마지막 시험을 보고 성적이 나왔는데 괜찮게 나왔다. 그래서 전체 평점은 4.45, 전공은 4.46으로 나름 성공적인 대학생활을 보낸 것 같다.&lt;/p&gt; &lt;h1 id=&quot;끄라비-암벽등반-여행-12211231&quot;&gt;끄라비 암벽등반 여행 (12/21~12/31)&lt;/h1&gt; &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/assets/post/image/2023-review/Pasted image 20240102222158.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt; &lt;p&gt;편하게 여행갈 수 있는 것은 마지막이라고 생각하여 끄라비로 바로 암벽등만 여행을 떠났다. 여기서도 인생 첫 5.11c/6c+를 달성해서 기뻤다.&lt;/p&gt; &lt;h1 id=&quot;sk-신입구성원-과정-12&quot;&gt;SK 신입구성원 과정 (1/2~)&lt;/h1&gt; &lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/assets/post/image/2023-review/Pasted image 20240103231802.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt; &lt;p&gt;현재는 SKT 신입연수를 받고 있다. 오늘 하루이지만 그래도 SKT에 잘 왔다는 생각이 든다.&lt;/p&gt; &lt;h1 id=&quot;앞으로의-계획&quot;&gt;앞으로의 계획&lt;/h1&gt; &lt;p align=&quot;center&quot;&gt; 올해 목표: 발전을 위한 초석 다지기 &lt;/p&gt; &lt;p&gt;현재는 첫 직장에 적응하고 빠르게 흡수하는 것이 최우선이다. 하지만 3년 뒤에 회사 내적으로나 외적으로 더 큰 기회가 올 것이라고 확신하고 있고 이를 준비해야한다. 따라서 올해 목표는 기회를 위하여 발전의 초석 다지기를 해야겠다.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;논문 꾸준히 읽기&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;이건 너무 당연해서 생략&lt;/p&gt; &lt;p&gt;&lt;strong&gt;수학공부&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;FlashAttention을 보면서 인공지능 최적화를 위해서는 엄밀한 증명이 필요한 분야가 많다는 것을 느꼈다. 앞으로도 이런 분야가 있을 것으로 생각된다. 따라서 학과과정에서 아주 기본적인 수학만 겉핥기식으로 했지만 이제는 따로 제대로 해야겠다는 생각이 들었다.&lt;/p&gt; &lt;p&gt;빠르게 학습해야할 것&lt;/p&gt; &lt;ul&gt; &lt;li&gt;선형대수&lt;/li&gt; &lt;li&gt;수리통계학&lt;/li&gt; &lt;li&gt;표본론 아마 이렇게만 잡아도 1년이 빠듯할 것 같다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;코딩공부&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;내가 개발자이긴 한데 컴퓨터비전만 해서 뭔가 애매한 느낌이 든다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;개발을 잘하는가? (X)&lt;/li&gt; &lt;li&gt;개발을 못하는가? (X)&lt;/li&gt; &lt;li&gt;알고리즘을 잘하는가? (X)&lt;/li&gt; &lt;li&gt;프로그램 아키텍쳐 설계를 잘 할줄 아는가? (X)&lt;/li&gt; &lt;li&gt;디자인패턴에 대해서 아는가? (X) &lt;del&gt;내가 컴공아 맞긴한가….?&lt;/del&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;너무 개발자가 아닌 느낌이 들어서 이번년도에는 디자인패턴과 서버, 클라우드를 공부할 것 같다. (CUDA 공부가 제일 급해서 먼저 할 듯…)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;하드웨어 공부&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;앞으로 수많은 NPU들이 나오고 이를 고려한 프로그래밍이 필요할 것이다. 물론 최적화하는 솔루션이 있지만 Edge TPU를 위한 네트워크가 따로 있듯 하드웨어에 대한 이해가 꼭 필요할 것이다.&lt;/p&gt; </description> <pubDate>Wed, 27 Dec 2023 15:00:00 +0000</pubDate> <link>https://www.wonbeomjang.kr/blog/2023/2023-review/</link> <guid isPermaLink="true">https://www.wonbeomjang.kr/blog/2023/2023-review/</guid> <category>daily</category> <category>self-reflection</category> <category>daily</category> <category>self-refection</category> </item> <item> <title>Keras 3.0 설명</title> <description>&lt;h1 id=&quot;why&quot;&gt;Why?&lt;/h1&gt; &lt;p&gt;과거 keras는 Tensorflow, Theano, MXNet등 여러 deep learning backend framework가 있을 때 multi-backend 지원의 강점을 가지며 출시되었다. 하지만 Teano와 MXNet등 여러 framework들은 쇄퇴의 길을 걸었고, tensorflow만 살아남게 되었다. 하지만 당시 tensorflow도 문제점은 가지고 있었다. 그것은 model 선언이 비직관적이라는 것이다. 따라서 tensorflow는 keras를 공식 레포에 집어넣어 keras.layer로 모델을 만들고 tensorflow backend로 학습하는 구조로 발전했다.&lt;/p&gt; &lt;p&gt;하지만 현재는 여러 연구에서 pytorch를 사용하고, pytorch 기반의 huggingface가 등장하면서 keras입장에서는 pytorch가 매력적인 시장으로 보였다. 그리고 tensorflow의 사용자가 줄어가고, 윈도우 네이티브 업데이트 지원을 종료하면서 다시 multi-backend의 강점을 다시 살리기로 했다.&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/keras3/img.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/keras3/img_1.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p&gt;그래서 keras는 다음과 같은 기능을 강조하면서 keras3.0을 출시했다.&lt;/p&gt; &lt;h1 id=&quot;주요-기능&quot;&gt;주요 기능&lt;/h1&gt; &lt;p&gt;Keras 3.0을 출시하면서 다음과 같은 중요한 기능을 제시했다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The full Keras API, available for TensorFlow, JAX, and PyTorch&lt;/li&gt; &lt;li&gt;A cross-framework low-level language for deep learning&lt;/li&gt; &lt;li&gt;Seamless integration with native workflows in JAX, PyTorch, and TensorFlow&lt;/li&gt; &lt;li&gt;Support for cross-framework data pipelines with all backends&lt;/li&gt; &lt;li&gt;A new distribution API for large-scale data parallelism and model parallelism&lt;/li&gt; &lt;li&gt;Pretrained models&lt;/li&gt; &lt;li&gt;Progressive disclosure of complexity&lt;/li&gt; &lt;li&gt;A new stateless API for layers, models, metrics, and optimizers&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;하나씩 살펴보자&lt;/p&gt; &lt;h2 id=&quot;the-full-keras-api-available-for-tensorflow-jax-and-pytorch&quot;&gt;The full Keras API, available for TensorFlow, JAX, and PyTorch&lt;/h2&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/keras3/img_3.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p&gt;keras로 선언된 모델과 함수들은 tensorflow, jax, pytorch에서 모두 사용가능하다. 즉, 3개의 프레임워크에서 모두 keras 함수를 사용할 수 있다는 것이다. 여기서 재밌는 점은 기존에 tf.keras로 선언된 모델도 jax, pytorch에서 실행 가능하다.&lt;/p&gt; &lt;h2 id=&quot;a-cross-framework-low-level-language-for-deep-learning&quot;&gt;A cross-framework low-level language for deep learning&lt;/h2&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/keras3/img_4.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p&gt;딥러닝 모델을 구성하다보면 matmul, stack 등 기본적인 연산자가 필요할 때 있다. 이럴때는 keras.ops를 사용하여 기본적인 연산자를 구성하면 tensorflow, jax, pytorch에서 모두 사용가능하다. 이 떄 keras는 두 가지를 중심으로 구현했다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Numpy에 관련한 연산자는 모두 구현한다. ex) ops.matmul, ops.sum, ops.stack, ops.einsum&lt;/li&gt; &lt;li&gt;Neural-specific function을 구현한다. ex) ops.softmax, ops.binary_crossentropy, ops.conv&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;seamless-integration-with-native-workflows-in-jax-pytorch-and-tensorflow&quot;&gt;Seamless integration with native workflows in JAX, PyTorch, and TensorFlow&lt;/h2&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/keras3/img_5.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p&gt;Integration하다보면 기존의 training loop 등 workflow를 그대로 유지해야할 경우가 있다. 물론 keras3.0은 이 경우도 지원한다.&lt;/p&gt; &lt;blockquote&gt; &lt;ul&gt; &lt;li&gt;Write a low-level JAX training loop to train a Keras model using an optax optimizer, jax.grad, jax.jit, jax.pmap.&lt;/li&gt; &lt;li&gt;Write a low-level TensorFlow training loop to train a Keras model using tf.GradientTape and tf.distribute.&lt;/li&gt; &lt;li&gt;Write a low-level PyTorch training loop to train a Keras model using a torch.optim optimizer, a torch loss function, and the torch.nn.parallel.DistributedDataParallel wrapper.&lt;/li&gt; &lt;li&gt;Use Keras layers in a PyTorch Module (because they are Module instances too!)&lt;/li&gt; &lt;li&gt;Use any PyTorch Module in a Keras model as if it were a Keras layer.&lt;/li&gt; &lt;li&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;/blockquote&gt; &lt;h2 id=&quot;a-new-distribution-api-for-large-scale-data-parallelism-and-model-parallelism&quot;&gt;A new distribution API for large-scale data parallelism and model parallelism&lt;/h2&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/keras3/img_7.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/keras3/img_8.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p&gt;keras에서는 여러 data parallelism을 제공한다. 단 두줄 만으로 분산학습이 된다는게 신기하긴 하다.&lt;/p&gt; &lt;h2 id=&quot;support-for-cross-framework-data-pipelines-with-all-backends&quot;&gt;Support for cross-framework data pipelines with all backends&lt;/h2&gt; &lt;p&gt;각 framework별로 다른 dataset 객체를 사용한다. Keras3.0은 이를 모두 지원한다.&lt;/p&gt; &lt;blockquote&gt; &lt;ul&gt; &lt;li&gt;tf.data.Dataset pipelines: the reference for scalable production ML.&lt;/li&gt; &lt;li&gt;torch.utils.data.DataLoader objects.&lt;/li&gt; &lt;li&gt;NumPy arrays and Pandas dataframes.&lt;/li&gt; &lt;li&gt;Keras’s own keras.utils.PyDataset objects.&lt;/li&gt; &lt;/ul&gt; &lt;/blockquote&gt; &lt;h2 id=&quot;pretrained-models&quot;&gt;Pretrained models&lt;/h2&gt; &lt;p&gt;Keras3.0은 다음과 같은 pretrained model을 지원한다.&lt;/p&gt; &lt;blockquote&gt; &lt;ul&gt; &lt;li&gt;BERT&lt;/li&gt; &lt;li&gt;OPT&lt;/li&gt; &lt;li&gt;Whisper&lt;/li&gt; &lt;li&gt;T5&lt;/li&gt; &lt;li&gt;StableDiffusion&lt;/li&gt; &lt;li&gt;YOLOv8&lt;/li&gt; &lt;li&gt;SegmentAnything&lt;/li&gt; &lt;li&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;/blockquote&gt; &lt;h2 id=&quot;progressive-disclosure-of-complexity&quot;&gt;Progressive disclosure of complexity&lt;/h2&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/keras3/img_6.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p&gt;개발하다보면 pytorch lightening, pytorch ignite, tensorflow orbit등 disclosure를 위한 툴을 쓴 경험이 있을 것이다. Keras는 이것이 keras api의 핵심 디자인으로 삼았으며 이를 지원한다 한다. &lt;del&gt;그냥 다른거 쓸 것 같긴한데…&lt;/del&gt;&lt;/p&gt; &lt;h2 id=&quot;a-new-stateless-api-for-layers-models-metrics-and-optimizers&quot;&gt;A new stateless API for layers, models, metrics, and optimizers.&lt;/h2&gt; &lt;p&gt;함수형 프로그래밍을 좋아하는 사람을 위해 stateless한 함수들을 만들었다.&lt;/p&gt; &lt;blockquote&gt; &lt;ul&gt; &lt;li&gt;All layers and models have a stateless_call() method which mirrors &lt;strong&gt;call&lt;/strong&gt;().&lt;/li&gt; &lt;li&gt;All optimizers have a stateless_apply() method which mirrors apply().&lt;/li&gt; &lt;li&gt;All metrics have a stateless_update_state() method which mirrors update_state() and a stateless_result() method which mirrors result().&lt;/li&gt; &lt;/ul&gt; &lt;/blockquote&gt; &lt;h1 id=&quot;example&quot;&gt;Example&lt;/h1&gt; &lt;p&gt;Tensorflow는 기존의 방법과 동일해서 설명을 생략하겠다.&lt;/p&gt; &lt;h3 id=&quot;mnist-with-keras-vgg19-pytorch-beckend&quot;&gt;MNIST with keras vgg19 (Pytorch Beckend)&lt;/h3&gt; &lt;script src=&quot;https://gist.github.com/wonbeomjang/e935128f7f55045ab2d08e091cc2b8e2.js&quot;&gt;&lt;/script&gt; &lt;p&gt;이렇게 하면 기존 tensorflow나 keras vgg를 weight를 포함하여 사용할 수 있다. 여기서 주의할 점은 dataset augmentation 부분에서 CHW를 HWC로 바꿔줘야한다는 것이다.&lt;/p&gt; &lt;h3 id=&quot;declare-pytorch-model-using-keras-application&quot;&gt;Declare Pytorch Model Using Keras Application&lt;/h3&gt; &lt;script src=&quot;https://gist.github.com/wonbeomjang/c76b1da2952d231e209a0d03896c4aef.js&quot;&gt;&lt;/script&gt; &lt;p&gt;재밌는 것은 keras.layer가 torch.nn.Module과 호환이되어 다음과 같이 모델을 선언할 수 있다.&lt;/p&gt; &lt;h1 id=&quot;맺으며&quot;&gt;맺으며&lt;/h1&gt; &lt;p&gt;너무 많은 담기 그래서 이쯤으로 마치고, 더 많은 예제는 다음에 다루기로 하겠다.&lt;/p&gt; </description> <pubDate>Sun, 03 Dec 2023 15:00:00 +0000</pubDate> <link>https://www.wonbeomjang.kr/blog/2023/keras-3/</link> <guid isPermaLink="true">https://www.wonbeomjang.kr/blog/2023/keras-3/</guid> <category>framework</category> <category>framework</category> </item> <item> <title>What Makes Multi-modal Learning Better than Single (Provably)</title> <description>&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt; &lt;p&gt;우리 세상은 많은 modality가 존재한다. 그리고 관념적으로도 여러 modal의 네트워크들을 fusion시키면 uni-modal보다 성능이 더 좋게 나온다. 그렇다면 우리는 이러한 궁금증이 생긴다.&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; _multi-modal learning이 uni-modal learning보다 좋은 성능을 제공할까?_ &lt;/p&gt; &lt;p&gt;저자는 이 궁금증에서 연구를 시작했고, 다음 두 가지를 중점적으로 살펴봤다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;(When) 어떤 상황에서 multi-modal이 uni-modal 보다 성능이 좋은가?&lt;/li&gt; &lt;li&gt;(Why) 무엇이 이런 성능을 유도했는가?&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;그리고 연구를 통해서 저자가 한 comtribution은 다음과 같다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Multi-modal learning을 population risk로 설명하고, 이는 latent representation quality의 bound 되어있다는 것을 밝혔다.&lt;/li&gt; &lt;li&gt;전체 modality의 subset으로 훈련시킨 network의 quality의 upper bound를 유도했다.&lt;/li&gt; &lt;li&gt;Modality의 subset으로 학습시키면 성능이 하락한다는 것을 이론적으로 분석했다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;참고로 결론은 다음과 같다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Multiple modality는 그 modal의 subset보다 적은 population risk를 갖는다.&lt;/li&gt; &lt;li&gt;이는 multi-modal이 더 정확한 latent space representation을 학습할 수 있다는 것이다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;이제 하나씩 살펴보자.&lt;/p&gt; &lt;h1 id=&quot;the-multi-modal-learning-formulation&quot;&gt;The Multi-modal Learning Formulation&lt;/h1&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/multi-modal-vs-uni-modal/figure1.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p&gt;먼저 수식을 정리하자. K개의 modalities에 대해서 data는 \(\mathbb{x}:=(x^{(1)},\cdots,x^{(K)})\) 으로 표현한다. 이 때 \(x^{(k)} \in \mathcal{X}^{(k)}\) 이다. 우리는 K개의 modalities를 보유하기 때문에 전체 input data space는&lt;/p&gt; \[\mathcal{X}=\mathcal{X}^{1} \times \cdots \times \mathcal{X}^{k}\] &lt;p&gt;로 표현된다. 그리고 target domain을 \(\mathcal{Y}\) , multi-modal의 공통된 latent space를 \(\mathcal{Z}\) 라 하자. 우리는 이제 true mapping을 다음과 같이 쓸 수 있다.&lt;/p&gt; \[g^\star: \mathcal{X} \mapsto \mathcal{Z}, g^\star \in \mathcal{G}\] \[h^\star: \mathcal{Z} \mapsto \mathcal{Y}, h^\star \in \mathcal{H}\] &lt;p&gt;그렇다면 이제 우리는 \(\mathbb{x}\) 의 data distribution을 정의할 수 있다.&lt;/p&gt; \[\mathbb{P}_\mathcal{D}(\mathbb{x},y)\triangleq\mathbb{P}_{y|x}(y|h^\star\circ g^\star(\mathbb{x}))\mathbb{P}_\mathbb{x}(\mathbb{x})\] &lt;p&gt;참고로 \(h^\star\circ g^\star(\mathbb{x})=h^\star(g^\star(\mathbb{x}))\) 로 합성함수를 의미한다.&lt;/p&gt; &lt;p&gt;우리는 일반화를 위해 \(\mathcal{N} \leq \mathcal{M}\) 인 modalitie의 subset에 대해서 살펴볼 것이다. Modality의 superset을 정의하자.&lt;/p&gt; \[\mathcal{X}^\prime := (\mathcal{X}^{(1)}\cup\bot)\times\cdots\times(\mathcal{X}^{(K)}\cup\bot)\] &lt;p&gt;이때, \(\bot\) 은 k번째의 modality는 쓰지 않는다는 것이다. 간단하게 시각화하면 다음과 같다.&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/multi-modal-vs-uni-modal/img1.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p&gt;이제 modalities를 선택하는 함수를 정의하자.&lt;/p&gt; \[p_\mathcal{M}(\mathbb{x})^{(k)}= \begin{cases} \mathbb{x}^{(k)} \text{ if } k\in\mathcal{M} \\ \bot \text{ else } \end{cases}\] &lt;p&gt;이때, 우리는 다음과 같은 식을 만들수도 있다. \(p^\prime_\mathcal{M} := \mathcal{X}^\prime\mapsto\mathcal{X}^\prime\) 우리의 목표는 Empirical Risk Minimization (ERM) principle에 따라서 learning objective를 minimize하는 것이다.&lt;/p&gt; \[\text{min } \hat{r}(h\circ g_\mathcal{M} \triangleq\frac{1}{m}\sum_{i=1}^ml(h\circ g_\mathcal{M}(\mathbb{x}_i),y_i) \text{ s.t. } h \in \mathcal{H}, g_\mathcal{M} \in \mathcal{G}\] &lt;p&gt;여기서 \(l\) 은 loss fuction이고, 최종적으로 정의하는 population risk는 다음과 같다.&lt;/p&gt; \[r(h\circ g_\mathcal{M})=\mathbb{E}_{(\mathbb{x}_i, y_i)\sim\mathcal{D}}[\hat{r}(h\circ g_\mathcal{M})]\] &lt;h1 id=&quot;main-result&quot;&gt;Main Result&lt;/h1&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;Definition 1.&lt;/strong&gt; Given a data distribution with the form in (1), for any learned latent representation mapping \(g \in \mathcal{G}\) , the &lt;em&gt;latent representation quality&lt;/em&gt; is defined as&lt;/p&gt; \[\eta(g)=\text{inf}_{h\in\mathcal{H}}[r(h\circ g)-r(h(h^*\circ g^*))]\] &lt;/blockquote&gt; &lt;p&gt;즉, \(\eta(g))\) 는 mapping function의 \(g \in \mathcal{G}\) 에 대해서 true latent space와 차이이기 때문에 latent space quality라고 할 수 있다.&lt;/p&gt; &lt;h3 id=&quot;rademacher-complexity&quot;&gt;Rademacher complexity&lt;/h3&gt; &lt;p&gt;이제 model complexity를 측정하는 Rademacher complexity에 대해서 알아보자. \(\mathcal{F}\) 를 \(\mathbb{R}^d \mapsto \mathbb{R}\) 인 vector-valued function으로 정의하자. \(\mathbb{R}^d\) 에서 iid 한 \(Z_1,...,Z_m\) 에 대해 sample를 \(S=(Z_1,...,Z_m)\) 라고 하자. Empirical Rademacher complexity는 다음과 같이 정의된다.&lt;/p&gt; \[\hat{\mathfrak{R}}_S(\mathcal{F}):=\mathbb{E}_\sigma[ \underset{f\in\mathcal{F}}{\text{sup}}\frac{1}{m}\sum_{i=1}^m\sigma_if(Z_i)]\] &lt;p&gt;이 때, \(\sigma=(\sigma_1,...,\sigma_n)^\top\) with \(\sigma_i \sim \text{unif}\{-1, 1\}\) 이다. 전체적인 Rademacher complexity은 다음과 같다.&lt;/p&gt; \[\mathfrak{R}_S(\mathcal{F})=\mathbb{E}[\hat{\mathfrak{R}}_S(\mathcal{F})]\] &lt;p&gt;이해하기 어려우니 다른 블로그의 설명을 인용하겠다.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;em&gt;Rademacher complexity가 1이라는 것은 모델이 위와 같은 random한 setup에서도 잘 fitting 했다는 것이므로, complexity가 크고 따라서 generalize를 잘 못할 것이라고 이야기 할 수 있다는 개념이다. &lt;a href=&quot;https://yun905.tistory.com/68&quot;&gt;https://yun905.tistory.com/68&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;h2 id=&quot;connection-to-latent-representation-quality&quot;&gt;Connection to Latent Representation Quality&lt;/h2&gt; &lt;p&gt;이제 latent space quality와 population risk의 관계를 살펴보자.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;Theorem 1&lt;/strong&gt;. Let \(S = ((x_i,y_i))^m_{i=1}\) be a dataset of m examples drawn i.i.d. according to \(\mathcal{D}\) . Let M, N be two distinct subsets of [ \(K\) ]. Assuming we have produced the empirical risk minimizers \((\hat{h}_\mathcal{M}, \hat{g}_\mathcal{M})\) and \((\hat{h}_\mathcal{N}, \hat{g}_\mathcal{N})\) , training with the \(\mathcal{M}\) and \(\mathcal{N}\) modalities separately. Then, for all \(1 &amp;gt; \delta &amp;gt; 0\) , with probability at least \(1-\frac{\delta}{2}\) :&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;\(r(\hat{h}_{\mathcal{M}} \circ \hat{g}_{\mathcal{M}}) - r(\hat{h}_{\mathcal{N}} \circ \hat{g}_{\mathcal{N}}) \leq \gamma_{\mathcal{S}}(\mathcal{M},\mathcal{N})+8L\mathfrak{R}(\mathcal{H} \circ \mathcal{G}_{\mathcal{M}})+\frac{4C}{\sqrt{m}}+2C\sqrt{\frac{2\text{ln}(2/\delta)}{m}}\)$&lt;/p&gt; \[\text{where}, \gamma_S(\mathcal{M},\mathcal{N})\triangleq\eta(\hat{g}_\mathcal{M})-\eta(\hat{g}_\mathcal{N})\] &lt;p&gt;즉, population risk의 차이는 latent space quality 차이와 model complexity에 upper bound가 된다는 것이다. 이는 그대로 사용하지 않고, 추후에 식 정리할 때 사용할 것이다. 여기서 sample size \(m\) 에 대해 \(\mathfrak{R}_S(\mathcal{F})\) 은 보통 \(\sqrt{C(\mathcal{F})/m}\) 에 bound된다. 따라서 우리는 다음과 같이 다시 쓸 수 있다.&lt;/p&gt; \[r(\hat{h}_{\mathcal{M}} \circ \hat{g}_{\mathcal{M}}) - r(\hat{h}_{\mathcal{N}} \circ \hat{g}_{\mathcal{N}}) \leq \gamma_{\mathcal{S}}(\mathcal{M},\mathcal{N})+\text{O}(1/m)\] &lt;h2 id=&quot;upper-bound-for-latent-space-exploration&quot;&gt;Upper Bound for Latent Space Exploration&lt;/h2&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;Theorem 2&lt;/strong&gt;. Let \(S={(x_i, y_i)}^m_{i=1}\) be a dataset of m examples drawn i.i.d. according to D. Let M be a subset of [ \(K\) ]. Assuming we have produced the empirical risk minimizers \((\hat{h}_\mathcal{M}, \hat{g}_\mathcal{M})\) training with the M modalities. Then, for all \(1 &amp;gt; \delta &amp;gt; 0$, with probability at least\)1 − \delta$$ :&lt;/p&gt; &lt;/blockquote&gt; \[\eta(\hat{g}_{\mathcal{M}})\leq 4L\mathfrak{R}(\mathcal{H} \circ \mathcal{G}_{\mathcal{M}})+4L\mathfrak{R}(\mathcal{H} \circ \mathcal{G})+6C\sqrt{\frac{2\text{ln}(2/\delta)}{m}}+\hat{L}(\hat{h}_{\mathcal{M}} \circ \hat{g}_{\mathcal{M}}, S)\] \[\text{where } \hat{L}(\hat{h}_{\mathcal{M}} \circ \hat{g}_{\mathcal{M}}, S) \triangleq \hat{r}(\hat{h}_{\mathcal{M}} \circ \hat{g}_{\mathcal{M}})-\hat{r}(h^\star\circ g^\star)\] &lt;p&gt;위에서 처럼 Rademacher complexity은 \(O(1/m)\) 이기 때문에&lt;/p&gt; \[\eta(\hat{g}_{\mathcal{M}})\leq \hat{L}(\hat{h}_{\mathcal{M}} \circ \hat{g}_{\mathcal{M}}, S)+\text{O}(1/m)\] &lt;p&gt;이 성립한다. 이 때, assumption 3에 의해&lt;/p&gt; \[\hat{L}(\hat{h}_{\mathcal{M}} \circ \hat{g}_{\mathcal{M}}, S) \leq \hat{L}(\hat{h}_{\mathcal{N}} \circ \hat{g}_{\mathcal{N}}, S)\] &lt;p&gt;이 성립한다.&lt;/p&gt; &lt;h2 id=&quot;result&quot;&gt;Result&lt;/h2&gt; &lt;p&gt;&lt;em&gt;그렇다면 언제 multi-modal을 사용해야하냐?&lt;/em&gt;&lt;/p&gt; \[\hat{L}(\hat{h}_{\mathcal{N}} \circ \hat{g}_{\mathcal{N}}, S) - \hat{L}(\hat{h}_{\mathcal{M}} \circ \hat{g}_{\mathcal{M}}, S) \geq \sqrt{\frac{C(\mathcal{H}\circ\mathcal{G}_\mathcal{M})}{m}}-\sqrt{\frac{C(\mathcal{H}\circ\mathcal{G}_\mathcal{N})}{m}}\] &lt;p&gt;저자는 다음과 같이 말한다.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;em&gt;(i) When the number of sample size m is large, the impact of intrinsic complexity of function classes will be reduced. (ii) Using more modalities can efficiently optimize the empirical risk, hence improve the latent representation quality.&lt;/em&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Sample size m이 충분히 클 때 Theorem 1에 적용하면 다음과 같은 식이 성립한다.&lt;/p&gt; &lt;p&gt;\(\gamma_{\mathcal{S}}(\mathcal{M},\mathcal{N})= \eta(\hat{g}_{\mathcal{M}}) - \eta(\hat{g}_{\mathcal{N}})\leq \hat{L}(\hat{h}_{\mathcal{M}} \circ \hat{g}_{\mathcal{M}}, S) - \hat{L}(\hat{h}_{\mathcal{N}} \circ \hat{g}_{\mathcal{N}}, S) \leq 0\)$&lt;/p&gt; \[r(\hat{h}_{\mathcal{M}} \circ \hat{g}_{\mathcal{M}}) \leq r(\hat{h}_{\mathcal{N}} \circ \hat{g}_{\mathcal{N}})\] &lt;p&gt;즉, 데이터셋의 크기가 클 때 modality의 수가 많은 것을 사용하는 것이 좋다.&lt;/p&gt; &lt;h2 id=&quot;non-positivity-guarantee&quot;&gt;Non-Positivity Guarantee&lt;/h2&gt; &lt;p&gt;sample size s가 클 때 \(\gamma_{\mathcal{S}}(\mathcal{M},\mathcal{N})\) 이 non-positive라는 것을 증명할 수 있다. 이것의 증명은 여기서 다루지 않겠다.&lt;/p&gt; &lt;h1 id=&quot;experiment&quot;&gt;Experiment&lt;/h1&gt; &lt;p&gt;이제 실험을 보자. Dataset으로는 Interactive Emotional Dyadic Motion Capture (IEMO- CAP) database을 사용했다. 이 데이터셋에는 여러 모달에 대해서 여러 사람이 대화하는 것이 들어있으며 발화자가 누구인지 맞추는 것이 목표이다. 여기에는 Text, Video, Audio 정보가 들어가있다.&lt;/p&gt; &lt;h2 id=&quot;number-of-modalities&quot;&gt;Number of Modalities&lt;/h2&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/multi-modal-vs-uni-modal/table1.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p&gt;Modal이 늘어날 수록 정확도가 상승하는 것을 볼 수 있다.&lt;/p&gt; &lt;h2 id=&quot;number-of-samples&quot;&gt;Number of Samples&lt;/h2&gt; &lt;p&gt;위에서 sample의 수가 클 때 multi-modal이 좋다고 했다. 따라서 이를 살펴보자.&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/multi-modal-vs-uni-modal/table2.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p&gt;여기서 볼 수 있듯, sample의 수가 줄어들면 madality의 수가 적을 때 성능이 좋은 경우가 있다.&lt;/p&gt; &lt;h2 id=&quot;quality-of-latent-spaces&quot;&gt;Quality of Latent Spaces&lt;/h2&gt; &lt;p&gt;multi-modal은 latent space quality가 좋다고 했다. 이를 확인해보자.&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/multi-modal-vs-uni-modal/table3.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p&gt;Sample의 수와 modal의 수로 비교해도 같은 결과를 낸다.&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/multi-modal-vs-uni-modal/figure2.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;h2 id=&quot;synthetic-data&quot;&gt;Synthetic Data&lt;/h2&gt; &lt;p&gt;실제 데이터에서 sample의 수가 많을 때 multi-modal이 좋다는 것을 확인했다. 인공데이터는 어떨까?&lt;/p&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/multi-modal-vs-uni-modal/table4.png&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p&gt;저자가 만든 인공데이터도 같은 모습을 보였다.&lt;/p&gt; </description> <pubDate>Sun, 19 Nov 2023 15:00:00 +0000</pubDate> <link>https://www.wonbeomjang.kr/blog/2023/multimodal-vs-unimodal/</link> <guid isPermaLink="true">https://www.wonbeomjang.kr/blog/2023/multimodal-vs-unimodal/</guid> <category>multi-modal</category> <category>paper</category> <category>multi-modal</category> <category>paper</category> </item> <item> <title>스타트업 리서치 인턴 후기</title> <description>&lt;h1 id=&quot;왜-시작했나요&quot;&gt;왜 시작했나요?&lt;/h1&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/starup-intern/img.jpeg&quot; width=&quot;80%&quot; /&gt; &lt;/p&gt; &lt;p align=&quot;center&quot;&gt; *&apos;Researcher일까? Engineer일까?&apos;* &lt;/p&gt; &lt;p&gt;나는 대학에 다니면서 항상 그런 고민을 했다. 고등학생 때 우연히 DeepMind에서 발표한 Playing Atari with Deep Reinforcement Learning이라는 논문을 보게되었고 인공지능에 빠져들었다. 대학 와서는 computer vision을 공부하게 되었다. 그저 인공지능이 좋아 backend, frontend 등 다른 분야보다는 인공지능 공부와 개발만 하게 되었다. 그러다 대학을 졸업할 때가 되었고, researcher와 engineer를 선택해야 할 순간이 다가왔다.&lt;/p&gt; &lt;p&gt;불행인지 다행인 건지 중앙대학교에서는 인턴을 해야지 졸업을 할 수 있었고, 관심 있는 두 군데 스타트업에 접촉하여 그중 한 회사인 뉴로클에서 인턴을 진행하게 되었다. 뉴로클을 선택한 이유는 간단했다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Computer Vision을 중점으로 한다.&lt;/li&gt; &lt;li&gt;자체 서비스를 판매하고 있다.&lt;/li&gt; &lt;li&gt;기업매출을 보니 매출도 성장세였고, 흑자를 내기 시작했다.&lt;/li&gt; &lt;li&gt;내가 내 일을 할 수 있고, 주체적으로 일할 수 있는 규모가 작지도 않고 크지도 않는 회사이다.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;결론적으로 이러한 예측이 맞았고 성공적으로 인턴을 만들 수 있었다.&lt;/p&gt; &lt;h1 id=&quot;무엇을-했나요&quot;&gt;무엇을 했나요?&lt;/h1&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/starup-intern/img.png&quot; width=&quot;50%&quot; /&gt; &lt;/p&gt; &lt;p&gt;기본적으로 리서치 인턴의 역할을 수행했으나 후반에는 리서치 엔지니어의 역할을 하게 되었다. 퍼포먼스가 좋아서 그런지 생각보다 많은 일을 하게 되었다. (외부에 공개적으로 자료가 나간 것들만 포함했다)&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Pretrained-OCR: OCR Auto-labeling 기능 추가 및 OCR 모델 성능 향상. 학습 속도 기존의 30%, 정확도 4%p 향상&lt;/li&gt; &lt;li&gt;Smart labeling (segmentation): 기술 검토 및 테스트, 모델 변환&lt;/li&gt; &lt;li&gt;Smart labeling (object detection): 기술 검토 및 모델 변환&lt;/li&gt; &lt;li&gt;회사 블로그 제작&lt;/li&gt; &lt;li&gt;리서치팀 docker 등 개발환경 관리&lt;/li&gt; &lt;li&gt;(방향성만 제시했지만) Neuro-I 성능개선, 다른 사람 연구 해결책 찾기 등등…&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;8개월동안 이걸 다 했다고?? 놀랍게도 그렇다. 개발 base로 computer vision을 공부했다 보니 구현 속도와 실험 속도가 압도적으로 빠른 것 같다.&lt;/p&gt; &lt;h1 id=&quot;무슨-경험이-도움이-되었나요&quot;&gt;무슨 경험이 도움이 되었나요?&lt;/h1&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/starup-intern/project.png&quot; width=&quot;50%&quot; /&gt; &lt;/p&gt; &lt;p&gt;동아리에서 공모전에서 프로젝트 경험이 많았고 협업도 많이 진행했다. 그래서 computer vision, 선형대수, 수치해석, 위상수학, 표 본론 등 과 같은 지식뿐만 아니라 tensorrt, onnx, quantization 등 많은 기술, pandas, matplotlib, seaborn과 같은 데이터 시각화, 딥러닝 모델이 제품에 어떻게 탑재해야 하는지에 대한 감도 있었다. 이 모든 경험을 회사에서 다 썼다. (진짜 다 썼다) 이러한 다양한 경험은 여러 기능에 기여를 할 수 있었던 것 같다.&lt;/p&gt; &lt;h1 id=&quot;무엇을-얻었나요&quot;&gt;무엇을 얻었나요?&lt;/h1&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/starup-intern/company.png&quot; width=&quot;50%&quot; /&gt; &lt;/p&gt; &lt;h2 id=&quot;협업&quot;&gt;협업&lt;/h2&gt; &lt;p&gt;학생 때와 차원이 다른 협업을 하게 되었다. 학교에는 기껏해야 backed, fronted고 인원도 적어서 체계도 없이 작업을 해도 되었다. 하지만 인턴을 하면서 backed, fronted뿐만 아니라 영업, 마케팅, backbend, 기획 등 여러 사람과 협업을 진행했다.&lt;/p&gt; &lt;h3 id=&quot;요구사항을-명확하게-하자&quot;&gt;요구사항을 명확하게 하자&lt;/h3&gt; &lt;p&gt;협업은 기본적으로 background가 완전하게 동일하지 않은 사람들끼리 작업을 한다. 따라서 같은 목표를 바라보고있어도 세부 사항이 다를 수 있다. 만약 이를 조정하지 않고 일을 진행하다 보면 다음에 다시 조정하고 어려울뿐더러 비용 역시 많이 발생한다.&lt;/p&gt; &lt;h3 id=&quot;방향성-설정&quot;&gt;방향성 설정&lt;/h3&gt; &lt;p&gt;하나의 기능이 만들어지기 위해서 다음과 같은 과정을 거친다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;새로운 연구 주제로 연구한다.&lt;/li&gt; &lt;li&gt;기획 및 디자인팀에서 제품 탑재 방향을 결정한다.&lt;/li&gt; &lt;li&gt;개발팀에서 제품을 개발한다.&lt;/li&gt; &lt;li&gt;마케팅팀에서 협력사에 제공할 데이터와 대외 홍보용 자료를 제작한다.&lt;/li&gt; &lt;li&gt;영업을 통해 제품을 판매한다.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;라이프 사이클에서 연구는 최상단을 차지한다. 따라서 첫 단추가 잘못 채워지면 전체적인 제품 방향이 엇나갈 수 있다.&lt;/p&gt; &lt;h3 id=&quot;문서화를-체계적으로-하자&quot;&gt;문서화를 체계적으로 하자&lt;/h3&gt; &lt;p&gt;내가 하는 연구를 follow up 하는 사람은 극소수다. 연구 이후 제품화할 때 조직되는 관련자들은 내가 작성해 놓은 document를 보고 작업을 시작한다. 그래서 진행한 연구와 모델을 제대로 이해시키려면 구조적으로 잘 문서화를 해야 한다.&lt;/p&gt; &lt;h2 id=&quot;지식&quot;&gt;지식&lt;/h2&gt; &lt;h2 id=&quot;tensorflow&quot;&gt;Tensorflow&lt;/h2&gt; &lt;p&gt;나는 지금까지 pytorch를 이용하여 작업을 했다. Tensorflow는 회사 들어와서 거의 처음 쓰게 된 것이다. Tensorflow는 기본적으로 eager mode가 제공되지 않아 코딩하는 것이 힘들었지만 tensorflow와 tensorflow orbit을 익히게 되는 좋은 기회가 되었다.&lt;/p&gt; &lt;h3 id=&quot;논문&quot;&gt;논문&lt;/h3&gt; &lt;p&gt;회사에 들어와서 논문을 진짜 많이 읽었다. 연구에 기반이 되는 논문뿐만 아니라 적용할 만한 최신논문, 기술 리포트, 워크숍 논문 등 다양하게 많이 읽었다. 이를 통해 ViT, active learning, OCR, anomaly detection, super resolution, backbone for edge device, federated learning 등 다양한 분야에 대해 기초지식을 쌓을 수 있었다.&lt;/p&gt; &lt;h3 id=&quot;데이터-분석&quot;&gt;데이터 분석&lt;/h3&gt; &lt;p&gt;기본적으로 데이터가 부족한 상황에서 모델의 성능을 올리는 방법을 고민을 했다. 이 때문에 사용자가 다룰 예상데이터의 특성을 분석하고 데이터에 적합한 방법론을 사용하여 성능을 높일 수 있었다.&lt;/p&gt; &lt;h2 id=&quot;일은-잘했나요&quot;&gt;일은 잘했나요?&lt;/h2&gt; &lt;p&gt;나에 대한 평가가 긍정적인 것을 보면 일을 잘했던 것 같다. 무엇보다도 나랑 같이 인턴을 진행한 분과 잘하는 것이 달라서 서로 시너지가 났던 것 같다. 원래 회사에도 리서치 인턴이 없었는데 인턴 둘이 좋은 선례를 만들어서 앞으로 계속 채용할 예정이다. (사실 면접이 완료되어 다음 리서치 인턴도 정해졌다.)&lt;/p&gt; &lt;h1 id=&quot;앞으로-무엇을-할-것인가요&quot;&gt;앞으로 무엇을 할 것인가요?&lt;/h1&gt; &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/assets/post/image/starup-intern/todo.png&quot; width=&quot;50%&quot; /&gt; &lt;/p&gt; &lt;p&gt;감사하게도 회사에서 정규직 제안을 받았다. 스타트업 리서치 엔지니어에 가깝지만, 학사 출신으로 연구를 할 수 있다는 것이 흔치 않은 기회이다. 하지만 회사에서 원하는 인재와 내가 가고자 하는 방향이 달랐다. 회사에서 원하는 인재는 generalist이지만 나는 한 분에서 specialist가 되고 싶었다. 분야 또한 일반적인 모델링이 아닌 모델 경량화, hardware optimization, low cost serving 쪽으로 가고 싶다. 그리고 내가 다루어야 하는 target data가 무엇인지 명확하게 정할 수 있는 연구개발을 하고 싶다.&lt;/p&gt; &lt;p&gt;이제 학교에 다시 돌아간다. 8개월 동안 뉴로클 덕분에 좋은 경험을 했고 내 실력도 엄청나게 향상되었다. 이제 4학년 2학기이다. 졸업도 얼마 안 남아서 취업 준비나 대학원 준비를 해야겠지만 DL engineer 쪽 공부도 더욱 열심히 하면서 내가 목표하는 커리어를 만들어 가야겠다.&lt;/p&gt; </description> <pubDate>Tue, 22 Aug 2023 15:00:00 +0000</pubDate> <link>https://www.wonbeomjang.kr/blog/2023/startup-research-intern-review/</link> <guid isPermaLink="true">https://www.wonbeomjang.kr/blog/2023/startup-research-intern-review/</guid> <category>daily</category> <category>daily</category> </item> </channel> </rss>